definitions:
  models.ChangePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.Comment:
    properties:
      content:
        type: string
      review_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.Feature:
    properties:
      details:
        type: string
      name:
        type: string
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.Phone:
    properties:
      brand:
        type: string
      features:
        items:
          $ref: '#/definitions/models.Feature'
        type: array
      name:
        type: string
      reviews:
        items:
          $ref: '#/definitions/models.Review'
        type: array
    type: object
  models.PhoneRequest:
    properties:
      brand:
        type: string
      name:
        type: string
    required:
    - brand
    - name
    type: object
  models.Profile:
    properties:
      bio:
        type: string
      full_name:
        type: string
      user_id:
        type: integer
    type: object
  models.RegistRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.Review:
    properties:
      content:
        type: string
      phone_id:
        type: integer
      rating:
        type: integer
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      password:
        type: string
      profile:
        $ref: '#/definitions/models.Profile'
      reviews:
        items:
          $ref: '#/definitions/models.Review'
        type: array
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/change-password/{id}:
    put:
      consumes:
      - application/json
      description: Change user password
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Password
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Change user password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Log in a user
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Log in a user
      tags:
      - auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get details of the authenticated user
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Regist
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /comments:
    post:
      consumes:
      - application/json
      description: Create a new comment
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
      security:
      - ApiKeyAuth: []
      summary: Create a new comment
      tags:
      - comments
  /comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a comment
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a comment
      tags:
      - comments
    put:
      consumes:
      - application/json
      description: Update a comment
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      - ApiKeyAuth: []
      summary: Update a comment
      tags:
      - comments
  /comments/{review_id}:
    get:
      consumes:
      - application/json
      description: Get comments by review ID
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review ID
        in: path
        name: review_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Comment'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get comments by review ID
      tags:
      - comments
  /phones:
    get:
      consumes:
      - application/json
      description: Get all phones
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Phone'
            type: array
      summary: Get all phones
      tags:
      - phones
    post:
      consumes:
      - application/json
      description: Create a new phone
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Phone
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/models.PhoneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new phone
      tags:
      - phones
  /phones/{phone_id}:
    delete:
      consumes:
      - application/json
      description: Delete a phone by ID
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Phone ID
        in: path
        name: phone_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Phone deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a phone by ID
      tags:
      - phones
    get:
      consumes:
      - application/json
      description: Get a phone by ID
      parameters:
      - description: Phone ID
        in: path
        name: phone_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Phone'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a phone by ID
      tags:
      - phones
    put:
      consumes:
      - application/json
      description: Update a phone
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Phone ID
        in: path
        name: phone_id
        required: true
        type: integer
      - description: Phone
        in: body
        name: phone
        required: true
        schema:
          $ref: '#/definitions/models.PhoneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Phone'
      security:
      - ApiKeyAuth: []
      summary: Update a phone
      tags:
      - phones
  /phones/{phone_id}/features:
    post:
      consumes:
      - application/json
      description: Create a new feature
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Phone ID
        in: path
        name: phone_id
        required: true
        type: integer
      - description: Feature
        in: body
        name: feature
        required: true
        schema:
          $ref: '#/definitions/models.Feature'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Feature'
      security:
      - ApiKeyAuth: []
      summary: Create a new feature
      tags:
      - features
  /phones/{phone_id}/features/{feature_id}:
    delete:
      consumes:
      - application/json
      description: Delete a feature of a phone
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Phone ID
        in: path
        name: phone_id
        required: true
        type: integer
      - description: Feature ID
        in: path
        name: feature_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Feature'
      security:
      - ApiKeyAuth: []
      summary: Delete a feature of a phone
      tags:
      - features
    put:
      consumes:
      - application/json
      description: Update a feature of a phone
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Phone ID
        in: path
        name: phone_id
        required: true
        type: integer
      - description: Feature ID
        in: path
        name: feature_id
        required: true
        type: integer
      - description: Feature
        in: body
        name: feature
        required: true
        schema:
          $ref: '#/definitions/models.Feature'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Feature'
      security:
      - ApiKeyAuth: []
      summary: Update a feature of a phone
      tags:
      - features
  /reviews:
    get:
      consumes:
      - application/json
      description: Get all reviews without authentication
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Get all reviews
      tags:
      - reviews
    post:
      consumes:
      - application/json
      description: Create a new review
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.Review'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - ApiKeyAuth: []
      summary: Create a new review
      tags:
      - reviews
  /reviews/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a review
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a review
      tags:
      - reviews
    put:
      consumes:
      - application/json
      description: Update a review
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      - description: Review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.Review'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - ApiKeyAuth: []
      summary: Update a review
      tags:
      - reviews
  /reviews/{phone_id}:
    get:
      consumes:
      - application/json
      description: Get reviews by phone ID
      parameters:
      - description: Phone ID
        in: path
        name: phone_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Get reviews by phone ID
      tags:
      - reviews
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - ApiKeyAuth: []
      summary: Get user by ID
      tags:
      - users
  /users/{id}/profile:
    put:
      consumes:
      - application/json
      description: Update user profile
      parameters:
      - description: JWT Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Profile
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/models.Profile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user profile
      tags:
      - users
swagger: "2.0"
